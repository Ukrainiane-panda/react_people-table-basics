{"version":3,"sources":["App.tsx","page/HomePage/HomePage.tsx","page/ErrorPage/ErrorPage.tsx","components/Loader/Loader.tsx","api.ts","page/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","HomePage","ErrorPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","slug","useParams","useState","people","setPeople","isLoading","setIsLoading","isDataFetched","setIsDataFetched","error","setError","fetchData","arrUsers","length","useEffect","preparedPeopleWithParents","map","person","mother","find","p","name","motherName","father","fatherName","sex","born","died","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d7d13667.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => cn('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDataFetched, setIsDataFetched] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchData = async () => {\n    setIsLoading(true);\n\n    try {\n      const arrUsers = await getPeople();\n\n      if (!arrUsers.length) {\n        setIsLoading(false);\n\n        return;\n      }\n\n      setPeople(arrUsers);\n      setIsDataFetched(true);\n      setIsLoading(false);\n    } catch {\n      setError('Something went wrong');\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const preparedPeopleWithParents = people.map((person) => ({\n    ...person,\n    mother: people.find((p) => p.name === (person.motherName || '-')),\n    father: people.find((p) => p.name === (person.fatherName || '-')),\n  }));\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {!isLoading && !isDataFetched\n        && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {error}\n          </p>\n        )}\n          {!people.length && isDataFetched\n            ? (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            ) : (\n              !isLoading && isDataFetched && (\n                <table\n                  data-cy=\"peopleTable\"\n                  className={'table is-striped is-hoverable'\n                    + 'is-narrow is-fullwidth'}\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {preparedPeopleWithParents.map(person => (\n                      <tr\n                        data-cy=\"person\"\n                        key={person.name}\n                        className={cn({\n                          'has-background-warning': slug === person.slug,\n                        })}\n                      >\n                        <td>\n                          <NavLink\n                            to={`../${person.slug}`}\n                            className={cn(\n                              { 'has-text-danger': person.sex === 'f' },\n                            )}\n                          >\n                            {person.name}\n                          </NavLink>\n                        </td>\n\n                        <td>{person.sex}</td>\n                        <td>{person.born}</td>\n                        <td>{person.died}</td>\n                        <td>\n                          {person.mother\n                            ? (\n                              <NavLink\n                                to={`/people/${person.mother.slug}`}\n                                className=\"has-text-danger\"\n                              >\n                                {person.motherName}\n                              </NavLink>\n                            ) : (\n                              person.motherName || '-'\n                            )}\n                        </td>\n                        <td>\n                          {person.father\n                            ? (\n                              <NavLink to={`/people/${person.father.slug}`}>\n                                {person.fatherName}\n                              </NavLink>\n                            ) : (\n                              person.fatherName || '-'\n                            )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './page/HomePage';\nimport { ErrorPage } from './page/ErrorPage';\nimport { PeoplePage } from './page/PeoplePage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n\n          </Route>\n\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}